plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.0'
}

group ='org.github'
version ='1.0'


repositories {
    def ALIYUN_REPOSITORY_URL = 'https://maven.aliyun.com/repository/public/'
    def ALIYUN_JCENTER_URL = 'https://maven.aliyun.com/repository/jcenter/'
    def ALIYUN_GOOGLE_URL = 'https://maven.aliyun.com/repository/google/'
    def ALIYUN_GRADLE_PLUGIN_URL = 'https://maven.aliyun.com/repository/gradle-plugin/'
    configureEach { ArtifactRepository repo ->
        if(repo instanceof MavenArtifactRepository){
            def url = repo.url.toString()
            if (url.startsWith('https://repo1.maven.org/maven2/')) {
                project.logger.lifecycle "Repository ${repo.url} replaced by $ALIYUN_REPOSITORY_URL."
                remove repo
            }
            if (url.startsWith('https://jcenter.bintray.com/')) {
                project.logger.lifecycle "Repository ${repo.url} replaced by $ALIYUN_JCENTER_URL."
                remove repo
            }
            if (url.startsWith('https://dl.google.com/dl/android/maven2/')) {
                project.logger.lifecycle "Repository ${repo.url} replaced by $ALIYUN_GOOGLE_URL."
                remove repo
            }
            if (url.startsWith('https://plugins.gradle.org/m2/')) {
                project.logger.lifecycle "Repository ${repo.url} replaced by $ALIYUN_GRADLE_PLUGIN_URL."
                remove repo
            }
        }
    }
    maven { url ALIYUN_REPOSITORY_URL }
    maven { url ALIYUN_JCENTER_URL }
    maven { url ALIYUN_GOOGLE_URL }
    maven { url ALIYUN_GRADLE_PLUGIN_URL }
    mavenCentral()
}
jar {
    manifest {
        attributes(
                'Main-Class': 'com.github.divergent.Client'
        )
    }
}

shadowJar {
    archiveBaseName.set('divergent')
    archiveClassifier.set('weGroup')
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': 'com.github.divergent.Client'
    }
    destinationDirectory.set(file("C:\\Users\\28382\\Desktop\\divergent_prepare"))
}

dependencies {
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.26.3'
    implementation 'commons-io:commons-io:2.15.1'
    implementation 'net.bytebuddy:byte-buddy:1.15.10'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.0'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.8.0.202311291450-r'
    implementation 'com.alibaba.fastjson2:fastjson2:2.0.53'
    implementation 'info.debatty:java-string-similarity:2.0.0'
    implementation 'com.github.tsantalis:refactoring-miner:3.0.10'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
test {
    useJUnitPlatform()
}

